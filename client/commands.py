"""
This file contains named constants used for commands and
subcommands taken from the Android app HealthWear

Not all of them have been checked for accuracy and correctedness
"""

from enum import IntEnum


class PrettierPrint:
    def __repr__(self):
        return f"{self.name}[{self.value}]"


class Command(PrettierPrint, IntEnum):
    SETTING = 1
    GET = 2
    CONTROL = 3
    DEV_CONTROL = 4
    HEALTH = 5
    REAL = 6
    COLLECT = 7
    FACTORY = 8
    DIAL = 9
    SELF_INSPECTION = 12
    CUSTOMIZE = 13
    TEST_TOOL = 14


class Control(PrettierPrint, IntEnum):
    FIND_DEVICE = 0
    HEART_TEST = 1
    BLOOD_TEST = 2
    BLOOD_CHECK = 3
    APP_EXIT = 4
    AEROBIC_COACH_MODE = 5
    BIND_DEVICE = 6
    UN_BIND_DEVICE = 7
    NOTIFICATION_PUSH = 8
    REAL_DATA = 9
    QUERY_SAMPLE_RATE = 10
    WAVE_UPLOAD = 11
    SPORT_MODE = 12
    TAKE_PHOTO = 14
    TODAY_WEATHER = 18
    TOMORROW_WEATHER = 19
    ECG_REAL_STATUS = 20
    HEALTH_ARG = 21
    SHUT_DOWN = 22
    TEMPERATURE_CORRECT = 23
    TEMP_MEASUREMENT_CONTROL = 24
    EMOTICON_INDEX = 25
    HEALTH_WRITE_BACK = 26
    SLEEP_WRITE_BACK = 27
    USER_INFO_WRITE_BACK = 28
    UPGRADE_REMINDER = 29
    AMBIENT_LIGHT_MEASUREMENT_CONTROL = 30
    AMBIENT_TEMP_HUMIDITY_MEASUREMENT_CONTROL = 32
    INSURANCE_NEWS = 33
    SENSOR_SWITCH_CONTROL = 34
    MOBILE_MODEL = 35
    EFFECTIVE_STEP = 36
    EFFECTIVE_HEART = 37
    EARLY_WARNING = 38
    PUSH_MESSAGE = 39
    PUSH_CONTACTS = 40
    PUSH_TEMP_AND_HUMID_CALIBRATION = 41
    PUSH_FEMALE_PHYSIOLOGICAL = 42
    PUSH_CALL_STATE = 43
    WRITEBACK_DATA = 44
    START_BLOOD_MEASUREMENT = 46
    START_MEASUREMENT = 47
    BLOOD_SUGAR_CHECK = 49
    PD_NUMBER = 50
    SEND_LOCATION_NUMBER = 51
    SEND_CARD_NUMBER = 52
    SEND_MEASURE_NUMBER = 53
    SEND_PRODUCT_INFO = 54
    URIC_ACID_CALIBRATION = 55
    LIPID_CALIBRATION = 56
    SEND_UUID = 57


class Collect(PrettierPrint, IntEnum):
    QUERY_NUM = 0
    GET_WITH_INDEX = 1
    GET_WITH_TIMESTAMP = 2
    FILE_COUNT = 5
    FILE_LIST = 6
    FILE_DATA = 7
    FILE_SYNC = 23
    CHECK_DATA = 32
    FILE_SYNC_VERIFY = 39
    DELETE_WITH_INDEX = 48
    DELETE_WITH_TIMESTAMP = 49
    SYNC_DATA = 16


class Customize(PrettierPrint, IntEnum):
    CGM = 1
    WIT = 2
    SYNC_DATA = 117
    SYNC_FILE = 118
    SYNC_BLOCK_VERIFY = 128


class DeviceControl(PrettierPrint, IntEnum):
    FIND_MOBILE = 0
    LOST_REMINDER = 1
    ANSWER_AND_CLOSE_PHONE = 2
    TAKE_PHOTO = 3
    START_MUSIC = 4
    SOS = 5
    DRINKING_PATTERNS = 6
    CONNECT_OR_DISCONNECT = 7
    SPORT_MODE = 8
    SYNC_CONTACTS = 9
    REST = 10
    END_ECG = 11
    SPORT_MODE_CONTROL = 12
    SWITCH_DIAL = 13
    MEASUREMENT_RESULT = 14
    ALARM_DATA = 15
    INFLATED_BLOOD_MEASURE_RESULT = 16
    UPGRADE_RESULT = 17
    PPI_DATA = 18
    MEASUR_STATUS_AND_RESULTS = 19
    REQUEST_DYNAMIC_CODE = 21


class Factory(PrettierPrint, IntEnum):
    OPEN_FATORY = 9


class Get(PrettierPrint, IntEnum):
    DEVICE_INFO = 0
    SUPPORT_FUNCTION = 1
    MAC_ADDRESS = 2
    DEVCIE_NAME = 3  # Note: Original typo preserved
    FUNCTION_STATE = 4
    USER_CONFIG = 7
    DEVICE_LOG = 8
    MAIN_THEME = 9
    ELECTRODE_LOCATION = 10
    DEVICE_SCREEN_INFO = 11
    NOW_STEP = 12
    HISTORY_OUTLINE = 13
    REAL_TEMP = 14
    SCREEN_INFO = 15
    HEAVEN_EARTH_AND_FIVE_ELEMENT = 16
    REAL_BLOOD_OXYGEN = 17
    CURRENT_AMBIENT_LIGHT_INTENSITY = 18
    CURRENT_AMBIENT_TEMP_AND_HUMIDITY = 19
    SCHEDULE_INFO = 20
    SENSOR_SAMPLING_INFO = 21
    CURRENT_SYSTEM_WORKING_MODE = 22
    INSURANCE_RELATED_INFO = 23
    UPLOAD_CONFIGURATION_INFO_OF_REMINDER = 24
    STATUS_OF_MANUAL_MODE = 25
    EVENT_REMINDER_INFO = 26
    CHIP_SCHEME = 27
    DEVICE_REMIND_INFO = 31
    ALL_REAL_DATA_FROM_DEVICE = 32
    LASER_TREATMENT_PARAMS = 33
    ALI_IOT_ACTIVATION_STATE = 34
    SCREEN_PARAMETERS = 35
    CARD_INFO = 36


class Health(PrettierPrint, IntEnum):
    HISTORY_SPORT = 2
    HISTORY_SLEEP = 4
    HISTORY_HEART = 6
    HISTORY_BLOOD = 8
    HISTORY_ALL = 9
    HISTORY_SPORT_ACK = 17
    HISTORY_SLEEP_ACK = 19
    HISTORY_HEART_ACK = 21
    HISTORY_BLOOD_ACK = 23
    HISTORY_ALL_ACK = 24
    HISTORY_BLOOD_OXYGEN = 26
    HISTORY_TEMP_AND_HUMIDITY = 28
    HISTORY_TEMP = 30
    HISTORY_AMBIENT_LIGHT = 32
    HISTORY_BLOOD_OXYGEN_ACK = 34
    HISTORY_TEMP_AND_HUMIDITY_ACK = 36
    HISTORY_TEMP_ACK = 38
    HISTORY_AMBIENT_LIGHT_ACK = 40
    HISTORY_FALL = 41
    HISTORY_FALL_ACK = 42
    HISTORY_HEALTH_MONITORING = 43
    HISTORY_HEALTH_MONITORING_ACK = 44
    HISTORY_SPORT_MODE = 45
    HISTORY_SPORT_MODE_ACK = 46
    HISTORY_COMPREHENSIVE_MEASURE_DATA = 47
    HISTORY_COMPREHENSIVE_MEASURE_DATA_ACK = 48
    HISTORY_BACKGROUND_REMINDER_RECORD = 49
    DELETE_SPORT = 64
    DELETE_SLEEP = 65
    DELETE_HEART = 66
    DELETE_BLOOD = 67
    DELETE_ALL = 68
    DELETE_BLOOD_OXYGEN = 69
    DELETE_TEMP_AND_HUMIDITY = 70
    DELETE_TEMP = 71
    DELETE_AMBIENT_LIGHT = 72
    DELETE_FALL = 73
    DELETE_HEALTH_MONITORING = 74
    DELETE_SPORT_MODE = 75
    DELETE_COMPREHENSIVE_MEASURE_DATA = 76
    DELETE_BACKGROUND_REMINDER_RECORD = 77
    HISTORY_BLOCK = 128


class Real(PrettierPrint, IntEnum):
    UPLOAD_SPORT = 0
    UPLOAD_HEART = 1
    UPLOAD_BLOOD_OXYGEN = 2
    UPLOAD_BLOOD = 3
    UPLOAD_PPG = 4
    UPLOAD_ECG = 5
    UPLOAD_RUN = 6
    UPLOAD_RESPIRATORY_RATE = 7
    UPLOAD_SENSOR = 8
    UPLOAD_AMBIENTLIGHT = 9
    UPLOAD_COMPREHENSIVE = 10
    UPLOAD_SCHEDULE = 11
    UPLOAD_EVENT_REMINDER = 12
    UPLOAD_OGA = 13
    UPLOAD_MUL_PHOTOELECTRIC_WAVEFORM = 15
    UPLOAD_INFLATED_BLOOD = 1550


class SelfInspection(PrettierPrint, IntEnum):
    SELF_INSPECTION_CHECK = 0


class Setting(PrettierPrint, IntEnum):
    TIME = 0
    ALARM = 1
    GOAL = 2
    USER_INFO = 3
    UNIT = 4
    LONG_SITE = 5
    ANTI_LOSE = 6
    ANTI_LOSE_ARG = 7
    HAND_WEAR = 8
    PHONE_OS = 9
    NOTIFICATION = 10
    HEART_ALARM = 11
    HEART_MONITOR = 12
    FIND_PHONE = 13
    RESTORE_FACTORY = 14
    NOT_DISTURB = 15
    ANCS_ON = 16
    AEROBIC_TRAIN = 17
    LANGUAGE = 18
    RAISE_SCREEN = 19
    DISPLAY_BRIGHTNESS = 20
    SKIN = 21
    BLOOD_RANGE = 22
    BT_NAME = 23
    SENSOR_RATE = 24
    MAIN_THEME = 25
    SLEEP_REMIND = 26
    PPG_COLLECT = 27
    STUDENT_DATA = 30
    TEMPERATURE_ALARM = 31
    TEMPERATURE_MONITOR = 32
    SCREEN_TIME = 33
    AMBIENT_LIGHT = 34
    WORKING_MODE = 35
    ACCIDENT_MODE = 36
    BRACELET_STATUS_ALERT = 37
    BLOOD_OXYGEN_MODE_MONITOR = 38
    SCHEDULE_MODIFICATION = 39
    AMBIENT_TEMPERATURE_AND_HUMIDITY = 40
    SCHEDULE_SWITCH = 41
    STEP_COUNTING_STATE_TIME = 42
    UPLOAD_REMINDER = 43
    BLUETOOTH_BROADCAST_INTERVAL = 44
    BLUETOOTH_TRANSMITTING_POWER = 45
    EXERCISE_HEART_RATE_ZONE = 46
    EVENT_REMINDER = 47
    EVENT_REMINDER_SWITCH = 48
    CONFIG_IN_DIF_WORKING_MODES = 49
    INSURANCE_SWITCH = 50
    LUNCH_DO_NOT_DISTURB_MODE = 51
    DEVICE_MAC = 52
    AIR_PUMP_FREQUENCY = 53
    SOS_SWITCH = 54
    LATITUDE_AND_LONGITUDE = 55
    BLOOD_ALARM = 56
    BLOOD_OXYGEN_ALARM = 57
    VIBRATION_TIME = 58
    LASER_TREATMENT_PARAMS = 59
    VIBRATION_INTENSITY = 60
    REGULAR_REMINDER = 61
    RESPIRATORY_RATE_ALARM = 62


class TestTool(PrettierPrint, IntEnum):
    GSENSOR = 4


# This one might be wrong, it's different in the code
class DialCollect(PrettierPrint, IntEnum):
    DIAL_SWITCH = 0
    DIAL_BLOCK = 2
    DIAL_INFO = 3
    DIAL_DELETE = 4
    DIAL_SET_CURRENT = 5


COMMAND_TO_SUBCOMMAND = {
    Command.SETTING: Setting,
    Command.GET: Get,
    Command.CONTROL: Control,
    Command.DEV_CONTROL: DeviceControl,
    Command.HEALTH: Health,
    Command.REAL: Real,
    Command.COLLECT: Collect,
    Command.FACTORY: Factory,
    Command.DIAL: DialCollect,
    Command.SELF_INSPECTION: SelfInspection,
    Command.CUSTOMIZE: Customize,
    Command.TEST_TOOL: TestTool,
}


def parse_dataType(val: int) -> tuple[Command, IntEnum | int]:
    assert 0 < val < 0xFFFF, "val is too large"

    cmd = (val >> 8) & 0xFF
    assert cmd in Command, f"unknown command {cmd}"
    cmd = Command(cmd)

    subCommand = val & 0xFF
    if not subCommand in COMMAND_TO_SUBCOMMAND[cmd]:
        print(f"Unknown subcommand ({subCommand}) for {cmd}")
    else:
        subCommand = COMMAND_TO_SUBCOMMAND[cmd](subCommand)

    return cmd, subCommand
